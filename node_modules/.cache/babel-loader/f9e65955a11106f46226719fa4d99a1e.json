{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loginThunk } from '../../thunks/auth';\nconst initialState = {\n  refreshToken: '',\n  accessToken: '',\n  email: '',\n  isLoading: false\n};\nexport const authSlicer = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setRefreshToken: state => {\n      state.email = 'data';\n      state.refreshToken = 'data';\n      state.accessToken = 'data';\n    }\n  },\n  extraReducers: {\n    [loginThunk.pending.type]: (state, action) => {\n      console.log('==========>action', action);\n      state.isLoading = true;\n    },\n    [loginThunk.fulfilled.type]: (state, action) => {\n      console.log('==========>action', action);\n      state.isLoading = false;\n      state.email = 'data';\n      state.refreshToken = 'data';\n      state.accessToken = 'data';\n    },\n    [loginThunk.rejected.type]: (state, action) => {\n      console.log('==========>access§', action);\n      state.isLoading = false;\n    }\n  }\n});\nexport const {\n  setRefreshToken\n} = authSlicer.actions;\nexport default authSlicer.reducer;","map":{"version":3,"sources":["/home/shrek/bred.li-hack/src/redux/slices/auth/index.ts"],"names":["createSlice","loginThunk","initialState","refreshToken","accessToken","email","isLoading","authSlicer","name","reducers","setRefreshToken","state","extraReducers","pending","type","action","console","log","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AASA,MAAMC,YAAmB,GAAG;AAC1BC,EAAAA,YAAY,EAAE,EADY;AAE1BC,EAAAA,WAAW,EAAE,EAFa;AAG1BC,EAAAA,KAAK,EAAE,EAHmB;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAA5B;AAOA,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;AACpCQ,EAAAA,IAAI,EAAE,MAD8B;AAEpCN,EAAAA,YAFoC;AAGpCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACN,KAAN,GAAc,MAAd;AACAM,MAAAA,KAAK,CAACR,YAAN,GAAqB,MAArB;AACAQ,MAAAA,KAAK,CAACP,WAAN,GAAoB,MAApB;AACD;AALO,GAH0B;AAUpCQ,EAAAA,aAAa,EAAE;AACb,KAACX,UAAU,CAACY,OAAX,CAAmBC,IAApB,GAA2B,CAACH,KAAD,EAAQI,MAAR,KAAuC;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAjC;AACAJ,MAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,KAJY;AAKb,KAACL,UAAU,CAACiB,SAAX,CAAqBJ,IAAtB,GAA6B,CAACH,KAAD,EAAQI,MAAR,KAAuC;AAClEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAjC;AACAJ,MAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACAK,MAAAA,KAAK,CAACN,KAAN,GAAc,MAAd;AACAM,MAAAA,KAAK,CAACR,YAAN,GAAqB,MAArB;AACAQ,MAAAA,KAAK,CAACP,WAAN,GAAoB,MAApB;AACD,KAXY;AAYb,KAACH,UAAU,CAACkB,QAAX,CAAoBL,IAArB,GAA4B,CAACH,KAAD,EAAQI,MAAR,KAAuC;AACjEC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC;AACAJ,MAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACD;AAfY;AAVqB,CAAD,CAA9B;AA6BP,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAAsBH,UAAU,CAACa,OAAvC;AAEP,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { loginThunk } from '../../thunks/auth';\n\ninterface IAuth {\n  refreshToken: string;\n  accessToken: string;\n  email: string;\n  isLoading: boolean;\n}\n\nconst initialState: IAuth = {\n  refreshToken: '',\n  accessToken: '',\n  email: '',\n  isLoading: false,\n};\n\nexport const authSlicer = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setRefreshToken: (state) => {\n      state.email = 'data';\n      state.refreshToken = 'data';\n      state.accessToken = 'data';\n    },\n  },\n  extraReducers: {\n    [loginThunk.pending.type]: (state, action: PayloadAction<any>) => {\n      console.log('==========>action', action);\n      state.isLoading = true;\n    },\n    [loginThunk.fulfilled.type]: (state, action: PayloadAction<any>) => {\n      console.log('==========>action', action);\n      state.isLoading = false;\n      state.email = 'data';\n      state.refreshToken = 'data';\n      state.accessToken = 'data';\n    },\n    [loginThunk.rejected.type]: (state, action: PayloadAction<any>) => {\n      console.log('==========>access§', action);\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const { setRefreshToken } = authSlicer.actions;\n\nexport default authSlicer.reducer;\n"]},"metadata":{},"sourceType":"module"}