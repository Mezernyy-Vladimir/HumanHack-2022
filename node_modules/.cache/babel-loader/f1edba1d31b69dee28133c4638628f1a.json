{"ast":null,"code":"var _jsxFileName = \"/home/shrek/bred.li-hack/src/shared/ui/formControlAnswers/index.tsx\";\nimport React from 'react';\nimport { FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormControlAnswers = _ref => {\n  let {\n    answers,\n    name,\n    control,\n    id,\n    setError,\n    questionQuest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: \"everything\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bod\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bod\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            className: \"txt termup\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputBox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leftObject\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: \"txt\",\n                children: questionQuest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                rules: {\n                  required: true\n                },\n                control: control,\n                name: `question${id + 1}`,\n                render: _ref2 => {\n                  let {\n                    field\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n                    onClick: () => setError(false),\n                    children: answers.map(answer => {\n                      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        className: \"txt\",\n                        color: \"primary\",\n                        value: `${answer.name}_${answer.isTrue}`,\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 41,\n                          columnNumber: 40\n                        }, this),\n                        label: answer.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 37,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormControlAnswers;\nexport default FormControlAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControlAnswers\");","map":{"version":3,"sources":["/home/shrek/bred.li-hack/src/shared/ui/formControlAnswers/index.tsx"],"names":["React","FormControl","FormLabel","RadioGroup","Radio","FormControlLabel","Controller","FormControlAnswers","answers","name","control","id","setError","questionQuest","required","field","map","answer","isTrue"],"mappings":";AAAA,OAAOA,KAAP,MAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,KAA7C,EAAoDC,gBAApD,QAA4E,eAA5E;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAIA,OAAO,aAAP;;;AAWA,MAAMC,kBAA8B,GAAG,QAA6D;AAAA,MAA5D;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,EAA1B;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,GAA4D;AAClG,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA,kCACA,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA,sBAAmCJ;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,KAArB;AAAA,0BAA4BI;AAA5B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,UAAD;AACE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBADT;AAEE,gBAAA,OAAO,EAAEJ,OAFX;AAGE,gBAAA,IAAI,EAAG,WAAUC,EAAE,GAAG,CAAE,EAH1B;AAIE,gBAAA,MAAM,EAAE,SAAe;AAAA,sBAAd;AAAEI,oBAAAA;AAAF,mBAAc;AACrB,sCACE,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,oBAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC,KAAD,CAA9C;AAAA,8BACGJ,OAAO,CAACQ,GAAR,CAAaC,MAAD,IAAY;AACvB,0CACE,QAAC,gBAAD;AACE,wBAAA,SAAS,EAAC,KADZ;AAEE,wBAAA,KAAK,EAAC,SAFR;AAGE,wBAAA,KAAK,EAAG,GAAEA,MAAM,CAACR,IAAK,IAAGQ,MAAM,CAACC,MAAO,EAHzC;AAIE,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gCAJX;AAKE,wBAAA,KAAK,EAAED,MAAM,CAACR;AALhB;AAAA;AAAA;AAAA;AAAA,8BADF;AASD,qBAVA;AADH;AAAA;AAAA;AAAA;AAAA,0BADF;AAeD;AApBH;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAxCD;;KAAMF,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import React, { Dispatch, FC, SetStateAction } from 'react';\nimport { FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport { Controller } from 'react-hook-form';\n\nimport { IAnswer } from '../../../consts';\n\nimport './style.css';\n\ninterface IProps {\n  answers: IAnswer[];\n  name: string;\n  questionQuest: string;\n  control: any;\n  id: number;\n  setError: Dispatch<SetStateAction<boolean>>;\n}\n\nconst FormControlAnswers: FC<IProps> = ({ answers, name, control, id, setError, questionQuest }) => {\n  return (\n    <FormControl className=\"everything\">\n      <div>\n        <div className=\"bod\">\n          <div  className=\"bod\">\n          <FormLabel className=\"txt termup\">{name}</FormLabel>\n            <div className=\"inputBox\">\n              <div className=\"leftObject\">\n                <FormLabel className=\"txt\">{questionQuest}</FormLabel>\n                <Controller\n                  rules={{ required: true }}\n                  control={control}\n                  name={`question${id + 1}`}\n                  render={({ field }) => {\n                    return (\n                      <RadioGroup {...field} onClick={() => setError(false)}>\n                        {answers.map((answer) => {\n                          return (\n                            <FormControlLabel\n                              className=\"txt\"\n                              color=\"primary\"\n                              value={`${answer.name}_${answer.isTrue}`}\n                              control={<Radio />}\n                              label={answer.name}\n                            />\n                          );\n                        })}\n                      </RadioGroup>\n                    );\n                  }}\n                />\n              </div>\n              {/* <img src=\"\" alt=\"Pers\" className=\"rightImage\" /> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n\nexport default FormControlAnswers;\n"]},"metadata":{},"sourceType":"module"}