{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authSlicer from './slices/auth';\nexport const store = configureStore({\n  reducer: {\n    auth: authSlicer\n  },\n  devTools: true,\n  middleware: getDefaultMiddleware => getDefaultMiddleware()\n});","map":{"version":3,"sources":["/home/shrek/bred.li-hack/src/redux/store.ts"],"names":["configureStore","authSlicer","store","reducer","auth","devTools","middleware","getDefaultMiddleware"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAClCG,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEH;AADC,GADyB;AAIlCI,EAAAA,QAAQ,EAAE,IAJwB;AAKlCC,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB;AALxB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\n\nimport authSlicer from './slices/auth';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlicer,\n  },\n  devTools: true,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}