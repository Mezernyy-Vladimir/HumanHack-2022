{"ast":null,"code":"var _jsxFileName = \"/home/shrek/bred.li-hack/src/shared/ui/formControlAnswers/index.tsx\";\nimport React from 'react';\nimport { FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport { Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormControlAnswers = _ref => {\n  let {\n    answers,\n    name,\n    control,\n    id,\n    setError\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      color: \"primary\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      rules: {\n        required: true\n      },\n      control: control,\n      name: `question${id + 1}`,\n      render: _ref2 => {\n        let {\n          field\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(RadioGroup, { ...field,\n          onClick: () => setError(false),\n          children: answers.map(answer => {\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              color: \"primary\",\n              value: `${answer.name}_${answer.isTrue}`,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 30\n              }, this),\n              label: answer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormControlAnswers;\nexport default FormControlAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControlAnswers\");","map":{"version":3,"sources":["/home/shrek/bred.li-hack/src/shared/ui/formControlAnswers/index.tsx"],"names":["React","FormControl","FormLabel","RadioGroup","Radio","FormControlLabel","Controller","FormControlAnswers","answers","name","control","id","setError","required","field","map","answer","isTrue"],"mappings":";AAAA,OAAOA,KAAP,MAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,KAA7C,EAAoDC,gBAApD,QAA4E,eAA5E;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAYA,MAAMC,kBAA8B,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,EAA1B;AAA8BC,IAAAA;AAA9B,GAA6C;AACnF,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA,gBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,OAAO,EAAEH,OAFX;AAGE,MAAA,IAAI,EAAG,WAAUC,EAAE,GAAG,CAAE,EAH1B;AAIE,MAAA,MAAM,EAAE,SAAe;AAAA,YAAd;AAAEG,UAAAA;AAAF,SAAc;AACrB,4BACE,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,UAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,KAAD,CAA9C;AAAA,oBACGJ,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AACvB,gCACE,QAAC,gBAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,KAAK,EAAG,GAAEA,MAAM,CAACP,IAAK,IAAGO,MAAM,CAACC,MAAO,EAFzC;AAGE,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAHX;AAIE,cAAA,KAAK,EAAED,MAAM,CAACP;AAJhB;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD;AAnBH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMF,kB;AA6BN,eAAeA,kBAAf","sourcesContent":["import React, { Dispatch, FC, SetStateAction } from 'react';\nimport { FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport { Controller } from 'react-hook-form';\n\nimport { IAnswer } from '../../../consts';\n\ninterface IProps {\n  answers: IAnswer[];\n  name: string;\n  control: any;\n  id: number;\n  setError: Dispatch<SetStateAction<boolean>>;\n}\n\nconst FormControlAnswers: FC<IProps> = ({ answers, name, control, id, setError }) => {\n  return (\n    <FormControl>\n      <FormLabel color=\"primary\">{name}</FormLabel>\n      <Controller\n        rules={{ required: true }}\n        control={control}\n        name={`question${id + 1}`}\n        render={({ field }) => {\n          return (\n            <RadioGroup {...field} onClick={() => setError(false)}>\n              {answers.map((answer) => {\n                return (\n                  <FormControlLabel\n                    color=\"primary\"\n                    value={`${answer.name}_${answer.isTrue}`}\n                    control={<Radio />}\n                    label={answer.name}\n                  />\n                );\n              })}\n            </RadioGroup>\n          );\n        }}\n      />\n    </FormControl>\n  );\n};\n\nexport default FormControlAnswers;\n"]},"metadata":{},"sourceType":"module"}